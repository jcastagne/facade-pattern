import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';

import { <%= classify(model) %>Api } from './api/<%= dasherize(model) %>.api';
import { <%= classify(name) %>State } from './state/<%= dasherize(name) %>.state';



@Injectable()
export class <%= classify(name) %>Facade {

    constructor(private <%= camelize(model) %>Api: <%= classify(model) %>Api, private <%= camelize(name) %>State: <%= classify(name) %>State) { }

    isUpdating$(): Observable < boolean > {
        return this.<%= camelize(name) %>State.isUpdating$();
    }

    /*** Examples of Optimistic or Pessimistic updates.
     
      
      // optimistic update
      // 1. update UI state
      // 2. call API
      add<%= classify(model) %>(<%= underscore(model) %>: <%= classify(model) %>Model) {
        this.settingsState.add<%= classify(model) %>(<%= underscore(model) %>);
        this.<%= camelize(model) %>Api.create<%= classify(model) %>(<%= underscore(model) %>)
          .subscribe(
            (added<%= classify(model) %>WithId: <%= classify(model) %>Model) => {
              // success callback - we have id generated by the server, let's update the state
              this.<%= classify(name) %>State.update<%= classify(model) %>Id(<%= camelize(model) %>, added<%= classify(model) %>WithId)
            },
            (error: any) => {
              // error callback - we need to rollback the state change
              this.<%= camelize(name) %>State.remove<%= classify(model) %>(<%= camelize(model) %>);
              console.log(error);
            }
          );
      }
    
      // pessimistic update
      // 1. call API
      // 2. update UI state
      update<%= classify(model) %>(<%= camelize(model) %>: <%= classify(model) %>Model) {
        this.<%= camelize(name) %>State.setUpdating(true);
        this.<%= camelize(model) %>Api.update<%= classify(model) %>(<%= camelize(model) %>)
          .subscribe(
            () => this.<%= camelize(name) %>State.update<%= classify(model) %>(<%= camelize(model) %>),
            (error) => console.log(error),
            () => this.<%= camelize(name) %>State.setUpdating(false)
          );
      } 
    ***/
}